---
const {items} = Astro.props;
---

<div class="accordion">
    {items.map(item => (
        <div class="accordion__item">
            <div class="tubeStop">
                <span class="stop"></span>
                <span class="line"></span>    
            </div>
            <div class="accordion__title">
                <p> { item.role } </p>
                <p class="dates">  { item.dates } </p>    
            </div>
            <div class="accordion__content">
                <div class="content__header">
                    <h4 class="place"> { item.place } </h4>
                </div>

                <ul class="description">
                    {item.items.map(entry => (
                        <li class="description__item"> { entry } </li>
                    ))}    
                </ul>

            </div>
        </div>
    ))}
</div>    

<style>

    .accordion {
        margin-bottom: 3rem;
    }

    .accordion__item {
        background-color: #fff;
        border-bottom: 0;
        border-radius: .1875rem;
        padding-inline-start: .75rem;
        position: relative;
    }

    .accordion__item.active .line,
    .accordion__item.active .stop {
        background-color: var(--font-color);
    }

    .tubeStop {
        height: 100%;
        inset-block-start: 6px;
        inset-inline-start: 0;
        position: absolute;
    }

    .stop {
        background-color: var(--font-color);
        border-radius: 50%;
        display: block;
        height: 12px;
        transition: var(--default-transition);
        width: 12px;
    }

    .stop::before {
        background-color: var(--font-color);
        content: '';
        display: block;
        height: 1.5rem;
        inset-block-start: -1.5rem;
        inset-inline-start: 5px;
        position: relative;
        width: 2px;
    }

    .accordion__item:first-child .stop::before,
    .accordion__item:last-child .line {
        display: none;
    }

    .line {
        background-color: var(--font-color);
        display: block;
        height: 100%; 
        inset-inline-start: 5px;
        position: relative;
        transition: var(--default-transition);
        width: 2px;
    }

    .accordion__title {
        background-color: #fff;
        cursor: pointer;
        font-weight: 700;
        padding-block: 0 .75rem;
        padding-inline: 1.5rem;
                transition: var(--default-transition);
        user-select: none;

    }

    .accordion__content {
        display: block;
        max-height: 0;
        opacity: .75;
        overflow: hidden;
        transition: all .4s ease;
    }
    
    .active > .accordion__content {
        max-height: 100vh;
    }

    .content__header {
        padding-block: .75rem;
        padding-inline: 1.5rem;
    }

    .dates {
        font-size: 14px;
        font-weight: 400;
        opacity: .75;
    }

    .description {
        list-style: initial;
        padding-inline: 3rem 1.5rem;
    }

    .description__item {
        padding-block-end: .375rem;
    }

</style>

<script>
    const accordionItems = document.getElementsByClassName('accordion__item');
    let index = null;

    const closeAccordions = () => {
        for(let i = 0; i < accordionItems.length; i++) {
            if(accordionItems[i].classList.contains('active')) {
                accordionItems[i].classList.remove('active');
            }
        }
    }
    
    const onItemClick = i => {
        accordionItems[i].classList.toggle('active');
    }

    for(let i = 0; i < accordionItems.length; i++) {
        accordionItems[i].addEventListener('click', onItemClick.bind(this, i));
    }

    onItemClick(0);

</script>